Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Programa Clase
Rule 2     Programa -> Clase
Rule 3     Clase -> CLASS TYPEID opcional { lista_atr_metodos } ;
Rule 4     opcional -> INHERITS TYPEID
Rule 5     opcional -> <empty>
Rule 6     lista_atr_metodos -> metodo lista_atr_metodos
Rule 7     lista_atr_metodos -> atributo lista_atr_metodos
Rule 8     lista_atr_metodos -> <empty>
Rule 9     atributo -> OBJECTID : TYPEID inicializacion ;
Rule 10    inicializacion -> ASSIGN expresion  [precedence=right, level=1]
Rule 11    inicializacion -> <empty>
Rule 12    metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ;
Rule 13    metodo -> OBJECTID ( ) : TYPEID { expresion } ;
Rule 14    formales -> formales formal ,
Rule 15    formales -> <empty>
Rule 16    formal -> OBJECTID : TYPEID
Rule 17    expresion -> BOOL_CONST
Rule 18    expresion -> STR_CONST
Rule 19    expresion -> INT_CONST
Rule 20    expresion -> OBJECTID
Rule 21    expresion -> { bloque }
Rule 22    expresion -> NEW TYPEID
Rule 23    expresion -> CASE expresion OF case_lista ESAC
Rule 24    expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion  [precedence=right, level=1]
Rule 25    expresion -> WHILE expresion LOOP expresion POOL
Rule 26    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 27    expresion -> OBJECTID ( )
Rule 28    expresion -> expresion . OBJECTID ( )
Rule 29    expresion -> expresion . OBJECTID ( expresiones_metodos expresion )
Rule 30    expresion -> OBJECTID ( expresiones_metodos expresion )
Rule 31    expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
Rule 32    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 33    expresion -> ~ expresion  [precedence=left, level=5]
Rule 34    expresion -> ISVOID expresion  [precedence=left, level=4]
Rule 35    expresion -> NOT expresion  [precedence=nonassoc, level=2]
Rule 36    expresion -> ( expresion )
Rule 37    expresion -> expresion = expresion  [precedence=nonassoc, level=2]
Rule 38    expresion -> expresion LE expresion  [precedence=nonassoc, level=2]
Rule 39    expresion -> expresion < expresion  [precedence=nonassoc, level=2]
Rule 40    expresion -> expresion / expresion  [precedence=left, level=4]
Rule 41    expresion -> expresion * expresion  [precedence=left, level=4]
Rule 42    expresion -> expresion - expresion  [precedence=left, level=3]
Rule 43    expresion -> expresion + expresion  [precedence=left, level=3]
Rule 44    expresion -> OBJECTID ASSIGN expresion  [precedence=right, level=1]
Rule 45    expresiones_metodos -> expresiones_metodos expresion ,
Rule 46    expresiones_metodos -> <empty>
Rule 47    expresiones_let -> , OBJECTID : TYPEID inicializacion expresiones_let
Rule 48    expresiones_let -> <empty>
Rule 49    case_lista -> OBJECTID : TYPEID DARROW expresion ; case_lista
Rule 50    case_lista -> OBJECTID : TYPEID DARROW expresion ;
Rule 51    bloque -> error ;
Rule 52    bloque -> bloque expresion ;
Rule 53    bloque -> expresion ;

Unused terminals:

    TRUE
    FALSE

Terminals, with rules where they appear:

(                    : 12 13 27 28 29 30 31 32 36
)                    : 12 13 27 28 29 30 31 32 36
*                    : 41
+                    : 43
,                    : 14 45 47
-                    : 42
.                    : 28 29 31 32
/                    : 40
:                    : 9 12 13 16 24 47 49 50
;                    : 3 9 12 13 49 50 51 52 53
<                    : 39
=                    : 37
@                    : 31 32
ASSIGN               : 10 44
BOOL_CONST           : 17
CASE                 : 23
CLASS                : 3
DARROW               : 49 50
ELSE                 : 26
ESAC                 : 23
FALSE                : 
FI                   : 26
IF                   : 26
IN                   : 24
INHERITS             : 4
INT_CONST            : 19
ISVOID               : 34
LE                   : 38
LET                  : 24
LOOP                 : 25
NEW                  : 22
NOT                  : 35
OBJECTID             : 9 12 13 16 20 24 27 28 29 30 31 32 44 47 49 50
OF                   : 23
POOL                 : 25
STR_CONST            : 18
THEN                 : 26
TRUE                 : 
TYPEID               : 3 4 9 12 13 16 22 24 31 32 47 49 50
WHILE                : 25
error                : 51
{                    : 3 12 13 21
}                    : 3 12 13 21
~                    : 33

Nonterminals, with rules where they appear:

Clase                : 1 2
Programa             : 1 0
atributo             : 7
bloque               : 21 52
case_lista           : 23 49
expresion            : 10 12 13 23 24 25 25 26 26 26 28 29 29 30 31 31 32 33 34 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 45 49 50 52 53
expresiones_let      : 24 47
expresiones_metodos  : 29 30 31 45
formal               : 12 14
formales             : 12 14
inicializacion       : 9 24 47
lista_atr_metodos    : 3 6 7
metodo               : 6
opcional             : 3


state 0

    (0) S' -> . Programa
    (1) Programa -> . Programa Clase
    (2) Programa -> . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (1) Programa -> Programa . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (2) Programa -> Clase .
    CLASS           reduce using rule 2 (Programa -> Clase .)
    $end            reduce using rule 2 (Programa -> Clase .)


state 3

    (3) Clase -> CLASS . TYPEID opcional { lista_atr_metodos } ;
    TYPEID          shift and go to state 5


state 4

    (1) Programa -> Programa Clase .
    CLASS           reduce using rule 1 (Programa -> Programa Clase .)
    $end            reduce using rule 1 (Programa -> Programa Clase .)


state 5

    (3) Clase -> CLASS TYPEID . opcional { lista_atr_metodos } ;
    (4) opcional -> . INHERITS TYPEID
    (5) opcional -> .
    INHERITS        shift and go to state 7
    {               reduce using rule 5 (opcional -> .)

    opcional                       shift and go to state 6

state 6

    (3) Clase -> CLASS TYPEID opcional . { lista_atr_metodos } ;
    {               shift and go to state 8


state 7

    (4) opcional -> INHERITS . TYPEID
    TYPEID          shift and go to state 9


state 8

    (3) Clase -> CLASS TYPEID opcional { . lista_atr_metodos } ;
    (6) lista_atr_metodos -> . metodo lista_atr_metodos
    (7) lista_atr_metodos -> . atributo lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) metodo -> . OBJECTID ( formales formal ) : TYPEID { expresion } ;
    (13) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    (9) atributo -> . OBJECTID : TYPEID inicializacion ;
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    lista_atr_metodos              shift and go to state 10
    metodo                         shift and go to state 11
    atributo                       shift and go to state 12

state 9

    (4) opcional -> INHERITS TYPEID .
    {               reduce using rule 4 (opcional -> INHERITS TYPEID .)


state 10

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos . } ;
    }               shift and go to state 14


state 11

    (6) lista_atr_metodos -> metodo . lista_atr_metodos
    (6) lista_atr_metodos -> . metodo lista_atr_metodos
    (7) lista_atr_metodos -> . atributo lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) metodo -> . OBJECTID ( formales formal ) : TYPEID { expresion } ;
    (13) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    (9) atributo -> . OBJECTID : TYPEID inicializacion ;
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    metodo                         shift and go to state 11
    lista_atr_metodos              shift and go to state 15
    atributo                       shift and go to state 12

state 12

    (7) lista_atr_metodos -> atributo . lista_atr_metodos
    (6) lista_atr_metodos -> . metodo lista_atr_metodos
    (7) lista_atr_metodos -> . atributo lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) metodo -> . OBJECTID ( formales formal ) : TYPEID { expresion } ;
    (13) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    (9) atributo -> . OBJECTID : TYPEID inicializacion ;
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    atributo                       shift and go to state 12
    lista_atr_metodos              shift and go to state 16
    metodo                         shift and go to state 11

state 13

    (12) metodo -> OBJECTID . ( formales formal ) : TYPEID { expresion } ;
    (13) metodo -> OBJECTID . ( ) : TYPEID { expresion } ;
    (9) atributo -> OBJECTID . : TYPEID inicializacion ;
    (               shift and go to state 17
    :               shift and go to state 18


state 14

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } . ;
    ;               shift and go to state 19


state 15

    (6) lista_atr_metodos -> metodo lista_atr_metodos .
    }               reduce using rule 6 (lista_atr_metodos -> metodo lista_atr_metodos .)


state 16

    (7) lista_atr_metodos -> atributo lista_atr_metodos .
    }               reduce using rule 7 (lista_atr_metodos -> atributo lista_atr_metodos .)


state 17

    (12) metodo -> OBJECTID ( . formales formal ) : TYPEID { expresion } ;
    (13) metodo -> OBJECTID ( . ) : TYPEID { expresion } ;
    (14) formales -> . formales formal ,
    (15) formales -> .
    )               shift and go to state 21
    OBJECTID        reduce using rule 15 (formales -> .)

    formales                       shift and go to state 20

state 18

    (9) atributo -> OBJECTID : . TYPEID inicializacion ;
    TYPEID          shift and go to state 22


state 19

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .
    CLASS           reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)
    $end            reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)


state 20

    (12) metodo -> OBJECTID ( formales . formal ) : TYPEID { expresion } ;
    (14) formales -> formales . formal ,
    (16) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 23

    formal                         shift and go to state 24

state 21

    (13) metodo -> OBJECTID ( ) . : TYPEID { expresion } ;
    :               shift and go to state 25


state 22

    (9) atributo -> OBJECTID : TYPEID . inicializacion ;
    (10) inicializacion -> . ASSIGN expresion
    (11) inicializacion -> .
    ASSIGN          shift and go to state 27
    ;               reduce using rule 11 (inicializacion -> .)

    inicializacion                 shift and go to state 26

state 23

    (16) formal -> OBJECTID . : TYPEID
    :               shift and go to state 28


state 24

    (12) metodo -> OBJECTID ( formales formal . ) : TYPEID { expresion } ;
    (14) formales -> formales formal . ,
    )               shift and go to state 29
    ,               shift and go to state 30


state 25

    (13) metodo -> OBJECTID ( ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 31


state 26

    (9) atributo -> OBJECTID : TYPEID inicializacion . ;
    ;               shift and go to state 32


state 27

    (10) inicializacion -> ASSIGN . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 33

state 28

    (16) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 48


state 29

    (12) metodo -> OBJECTID ( formales formal ) . : TYPEID { expresion } ;
    :               shift and go to state 49


state 30

    (14) formales -> formales formal , .
    OBJECTID        reduce using rule 14 (formales -> formales formal , .)


state 31

    (13) metodo -> OBJECTID ( ) : TYPEID . { expresion } ;
    {               shift and go to state 50


state 32

    (9) atributo -> OBJECTID : TYPEID inicializacion ; .
    OBJECTID        reduce using rule 9 (atributo -> OBJECTID : TYPEID inicializacion ; .)
    }               reduce using rule 9 (atributo -> OBJECTID : TYPEID inicializacion ; .)


state 33

    (10) inicializacion -> ASSIGN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 10 (inicializacion -> ASSIGN expresion .)
    ,               reduce using rule 10 (inicializacion -> ASSIGN expresion .)
    IN              reduce using rule 10 (inicializacion -> ASSIGN expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 34

    (17) expresion -> BOOL_CONST .
    .               reduce using rule 17 (expresion -> BOOL_CONST .)
    @               reduce using rule 17 (expresion -> BOOL_CONST .)
    =               reduce using rule 17 (expresion -> BOOL_CONST .)
    LE              reduce using rule 17 (expresion -> BOOL_CONST .)
    <               reduce using rule 17 (expresion -> BOOL_CONST .)
    /               reduce using rule 17 (expresion -> BOOL_CONST .)
    *               reduce using rule 17 (expresion -> BOOL_CONST .)
    -               reduce using rule 17 (expresion -> BOOL_CONST .)
    +               reduce using rule 17 (expresion -> BOOL_CONST .)
    ;               reduce using rule 17 (expresion -> BOOL_CONST .)
    ,               reduce using rule 17 (expresion -> BOOL_CONST .)
    IN              reduce using rule 17 (expresion -> BOOL_CONST .)
    OF              reduce using rule 17 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 17 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 17 (expresion -> BOOL_CONST .)
    )               reduce using rule 17 (expresion -> BOOL_CONST .)
    }               reduce using rule 17 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 17 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 17 (expresion -> BOOL_CONST .)
    FI              reduce using rule 17 (expresion -> BOOL_CONST .)


state 35

    (18) expresion -> STR_CONST .
    .               reduce using rule 18 (expresion -> STR_CONST .)
    @               reduce using rule 18 (expresion -> STR_CONST .)
    =               reduce using rule 18 (expresion -> STR_CONST .)
    LE              reduce using rule 18 (expresion -> STR_CONST .)
    <               reduce using rule 18 (expresion -> STR_CONST .)
    /               reduce using rule 18 (expresion -> STR_CONST .)
    *               reduce using rule 18 (expresion -> STR_CONST .)
    -               reduce using rule 18 (expresion -> STR_CONST .)
    +               reduce using rule 18 (expresion -> STR_CONST .)
    ;               reduce using rule 18 (expresion -> STR_CONST .)
    ,               reduce using rule 18 (expresion -> STR_CONST .)
    IN              reduce using rule 18 (expresion -> STR_CONST .)
    OF              reduce using rule 18 (expresion -> STR_CONST .)
    LOOP            reduce using rule 18 (expresion -> STR_CONST .)
    THEN            reduce using rule 18 (expresion -> STR_CONST .)
    )               reduce using rule 18 (expresion -> STR_CONST .)
    }               reduce using rule 18 (expresion -> STR_CONST .)
    POOL            reduce using rule 18 (expresion -> STR_CONST .)
    ELSE            reduce using rule 18 (expresion -> STR_CONST .)
    FI              reduce using rule 18 (expresion -> STR_CONST .)


state 36

    (19) expresion -> INT_CONST .
    .               reduce using rule 19 (expresion -> INT_CONST .)
    @               reduce using rule 19 (expresion -> INT_CONST .)
    =               reduce using rule 19 (expresion -> INT_CONST .)
    LE              reduce using rule 19 (expresion -> INT_CONST .)
    <               reduce using rule 19 (expresion -> INT_CONST .)
    /               reduce using rule 19 (expresion -> INT_CONST .)
    *               reduce using rule 19 (expresion -> INT_CONST .)
    -               reduce using rule 19 (expresion -> INT_CONST .)
    +               reduce using rule 19 (expresion -> INT_CONST .)
    ;               reduce using rule 19 (expresion -> INT_CONST .)
    ,               reduce using rule 19 (expresion -> INT_CONST .)
    IN              reduce using rule 19 (expresion -> INT_CONST .)
    OF              reduce using rule 19 (expresion -> INT_CONST .)
    LOOP            reduce using rule 19 (expresion -> INT_CONST .)
    THEN            reduce using rule 19 (expresion -> INT_CONST .)
    )               reduce using rule 19 (expresion -> INT_CONST .)
    }               reduce using rule 19 (expresion -> INT_CONST .)
    POOL            reduce using rule 19 (expresion -> INT_CONST .)
    ELSE            reduce using rule 19 (expresion -> INT_CONST .)
    FI              reduce using rule 19 (expresion -> INT_CONST .)


state 37

    (20) expresion -> OBJECTID .
    (27) expresion -> OBJECTID . ( )
    (30) expresion -> OBJECTID . ( expresiones_metodos expresion )
    (44) expresion -> OBJECTID . ASSIGN expresion
    .               reduce using rule 20 (expresion -> OBJECTID .)
    @               reduce using rule 20 (expresion -> OBJECTID .)
    =               reduce using rule 20 (expresion -> OBJECTID .)
    LE              reduce using rule 20 (expresion -> OBJECTID .)
    <               reduce using rule 20 (expresion -> OBJECTID .)
    /               reduce using rule 20 (expresion -> OBJECTID .)
    *               reduce using rule 20 (expresion -> OBJECTID .)
    -               reduce using rule 20 (expresion -> OBJECTID .)
    +               reduce using rule 20 (expresion -> OBJECTID .)
    ;               reduce using rule 20 (expresion -> OBJECTID .)
    ,               reduce using rule 20 (expresion -> OBJECTID .)
    IN              reduce using rule 20 (expresion -> OBJECTID .)
    OF              reduce using rule 20 (expresion -> OBJECTID .)
    LOOP            reduce using rule 20 (expresion -> OBJECTID .)
    THEN            reduce using rule 20 (expresion -> OBJECTID .)
    )               reduce using rule 20 (expresion -> OBJECTID .)
    }               reduce using rule 20 (expresion -> OBJECTID .)
    POOL            reduce using rule 20 (expresion -> OBJECTID .)
    ELSE            reduce using rule 20 (expresion -> OBJECTID .)
    FI              reduce using rule 20 (expresion -> OBJECTID .)
    (               shift and go to state 60
    ASSIGN          shift and go to state 61


state 38

    (21) expresion -> { . bloque }
    (51) bloque -> . error ;
    (52) bloque -> . bloque expresion ;
    (53) bloque -> . expresion ;
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 63
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    bloque                         shift and go to state 62
    expresion                      shift and go to state 64

state 39

    (22) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 65


state 40

    (23) expresion -> CASE . expresion OF case_lista ESAC
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 66

state 41

    (24) expresion -> LET . OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    OBJECTID        shift and go to state 67


state 42

    (25) expresion -> WHILE . expresion LOOP expresion POOL
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 68

state 43

    (26) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 69

state 44

    (36) expresion -> ( . expresion )
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 70

state 45

    (33) expresion -> ~ . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 71

state 46

    (34) expresion -> ISVOID . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 72

state 47

    (35) expresion -> NOT . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 73

state 48

    (16) formal -> OBJECTID : TYPEID .
    )               reduce using rule 16 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 16 (formal -> OBJECTID : TYPEID .)


state 49

    (12) metodo -> OBJECTID ( formales formal ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 74


state 50

    (13) metodo -> OBJECTID ( ) : TYPEID { . expresion } ;
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 75

state 51

    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    OBJECTID        shift and go to state 76


state 52

    (31) expresion -> expresion @ . TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 77


state 53

    (37) expresion -> expresion = . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 78

state 54

    (38) expresion -> expresion LE . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 79

state 55

    (39) expresion -> expresion < . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 80

state 56

    (40) expresion -> expresion / . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 81

state 57

    (41) expresion -> expresion * . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 82

state 58

    (42) expresion -> expresion - . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 83

state 59

    (43) expresion -> expresion + . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 84

state 60

    (27) expresion -> OBJECTID ( . )
    (30) expresion -> OBJECTID ( . expresiones_metodos expresion )
    (45) expresiones_metodos -> . expresiones_metodos expresion ,
    (46) expresiones_metodos -> .
    )               shift and go to state 85
    BOOL_CONST      reduce using rule 46 (expresiones_metodos -> .)
    STR_CONST       reduce using rule 46 (expresiones_metodos -> .)
    INT_CONST       reduce using rule 46 (expresiones_metodos -> .)
    OBJECTID        reduce using rule 46 (expresiones_metodos -> .)
    {               reduce using rule 46 (expresiones_metodos -> .)
    NEW             reduce using rule 46 (expresiones_metodos -> .)
    CASE            reduce using rule 46 (expresiones_metodos -> .)
    LET             reduce using rule 46 (expresiones_metodos -> .)
    WHILE           reduce using rule 46 (expresiones_metodos -> .)
    IF              reduce using rule 46 (expresiones_metodos -> .)
    ~               reduce using rule 46 (expresiones_metodos -> .)
    ISVOID          reduce using rule 46 (expresiones_metodos -> .)
    NOT             reduce using rule 46 (expresiones_metodos -> .)
    (               reduce using rule 46 (expresiones_metodos -> .)

    expresiones_metodos            shift and go to state 86

state 61

    (44) expresion -> OBJECTID ASSIGN . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 87

state 62

    (21) expresion -> { bloque . }
    (52) bloque -> bloque . expresion ;
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    }               shift and go to state 88
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 89

state 63

    (51) bloque -> error . ;
    ;               shift and go to state 90


state 64

    (53) bloque -> expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 91
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 65

    (22) expresion -> NEW TYPEID .
    .               reduce using rule 22 (expresion -> NEW TYPEID .)
    @               reduce using rule 22 (expresion -> NEW TYPEID .)
    =               reduce using rule 22 (expresion -> NEW TYPEID .)
    LE              reduce using rule 22 (expresion -> NEW TYPEID .)
    <               reduce using rule 22 (expresion -> NEW TYPEID .)
    /               reduce using rule 22 (expresion -> NEW TYPEID .)
    *               reduce using rule 22 (expresion -> NEW TYPEID .)
    -               reduce using rule 22 (expresion -> NEW TYPEID .)
    +               reduce using rule 22 (expresion -> NEW TYPEID .)
    ;               reduce using rule 22 (expresion -> NEW TYPEID .)
    ,               reduce using rule 22 (expresion -> NEW TYPEID .)
    IN              reduce using rule 22 (expresion -> NEW TYPEID .)
    OF              reduce using rule 22 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 22 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 22 (expresion -> NEW TYPEID .)
    )               reduce using rule 22 (expresion -> NEW TYPEID .)
    }               reduce using rule 22 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 22 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 22 (expresion -> NEW TYPEID .)
    FI              reduce using rule 22 (expresion -> NEW TYPEID .)


state 66

    (23) expresion -> CASE expresion . OF case_lista ESAC
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    OF              shift and go to state 92
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 67

    (24) expresion -> LET OBJECTID . : TYPEID inicializacion expresiones_let IN expresion
    :               shift and go to state 93


state 68

    (25) expresion -> WHILE expresion . LOOP expresion POOL
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    LOOP            shift and go to state 94
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 69

    (26) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    THEN            shift and go to state 95
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 70

    (36) expresion -> ( expresion . )
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 96
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 71

    (33) expresion -> ~ expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 33 (expresion -> ~ expresion .)
    LE              reduce using rule 33 (expresion -> ~ expresion .)
    <               reduce using rule 33 (expresion -> ~ expresion .)
    /               reduce using rule 33 (expresion -> ~ expresion .)
    *               reduce using rule 33 (expresion -> ~ expresion .)
    -               reduce using rule 33 (expresion -> ~ expresion .)
    +               reduce using rule 33 (expresion -> ~ expresion .)
    ;               reduce using rule 33 (expresion -> ~ expresion .)
    ,               reduce using rule 33 (expresion -> ~ expresion .)
    IN              reduce using rule 33 (expresion -> ~ expresion .)
    OF              reduce using rule 33 (expresion -> ~ expresion .)
    LOOP            reduce using rule 33 (expresion -> ~ expresion .)
    THEN            reduce using rule 33 (expresion -> ~ expresion .)
    )               reduce using rule 33 (expresion -> ~ expresion .)
    }               reduce using rule 33 (expresion -> ~ expresion .)
    POOL            reduce using rule 33 (expresion -> ~ expresion .)
    ELSE            reduce using rule 33 (expresion -> ~ expresion .)
    FI              reduce using rule 33 (expresion -> ~ expresion .)
    .               shift and go to state 51
    @               shift and go to state 52


state 72

    (34) expresion -> ISVOID expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 34 (expresion -> ISVOID expresion .)
    LE              reduce using rule 34 (expresion -> ISVOID expresion .)
    <               reduce using rule 34 (expresion -> ISVOID expresion .)
    /               reduce using rule 34 (expresion -> ISVOID expresion .)
    *               reduce using rule 34 (expresion -> ISVOID expresion .)
    -               reduce using rule 34 (expresion -> ISVOID expresion .)
    +               reduce using rule 34 (expresion -> ISVOID expresion .)
    ;               reduce using rule 34 (expresion -> ISVOID expresion .)
    ,               reduce using rule 34 (expresion -> ISVOID expresion .)
    IN              reduce using rule 34 (expresion -> ISVOID expresion .)
    OF              reduce using rule 34 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 34 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 34 (expresion -> ISVOID expresion .)
    )               reduce using rule 34 (expresion -> ISVOID expresion .)
    }               reduce using rule 34 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 34 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 34 (expresion -> ISVOID expresion .)
    FI              reduce using rule 34 (expresion -> ISVOID expresion .)
    .               shift and go to state 51
    @               shift and go to state 52


state 73

    (35) expresion -> NOT expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 35 (expresion -> NOT expresion .)
    LE              reduce using rule 35 (expresion -> NOT expresion .)
    <               reduce using rule 35 (expresion -> NOT expresion .)
    ;               reduce using rule 35 (expresion -> NOT expresion .)
    ,               reduce using rule 35 (expresion -> NOT expresion .)
    IN              reduce using rule 35 (expresion -> NOT expresion .)
    OF              reduce using rule 35 (expresion -> NOT expresion .)
    LOOP            reduce using rule 35 (expresion -> NOT expresion .)
    THEN            reduce using rule 35 (expresion -> NOT expresion .)
    )               reduce using rule 35 (expresion -> NOT expresion .)
    }               reduce using rule 35 (expresion -> NOT expresion .)
    POOL            reduce using rule 35 (expresion -> NOT expresion .)
    ELSE            reduce using rule 35 (expresion -> NOT expresion .)
    FI              reduce using rule 35 (expresion -> NOT expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 74

    (12) metodo -> OBJECTID ( formales formal ) : TYPEID . { expresion } ;
    {               shift and go to state 97


state 75

    (13) metodo -> OBJECTID ( ) : TYPEID { expresion . } ;
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    }               shift and go to state 98
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 76

    (28) expresion -> expresion . OBJECTID . ( )
    (29) expresion -> expresion . OBJECTID . ( expresiones_metodos expresion )
    (               shift and go to state 99


state 77

    (31) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 100


state 78

    (37) expresion -> expresion = expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 37 (expresion -> expresion = expresion .)
    LE              reduce using rule 37 (expresion -> expresion = expresion .)
    <               reduce using rule 37 (expresion -> expresion = expresion .)
    ;               reduce using rule 37 (expresion -> expresion = expresion .)
    ,               reduce using rule 37 (expresion -> expresion = expresion .)
    IN              reduce using rule 37 (expresion -> expresion = expresion .)
    OF              reduce using rule 37 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 37 (expresion -> expresion = expresion .)
    THEN            reduce using rule 37 (expresion -> expresion = expresion .)
    )               reduce using rule 37 (expresion -> expresion = expresion .)
    }               reduce using rule 37 (expresion -> expresion = expresion .)
    POOL            reduce using rule 37 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 37 (expresion -> expresion = expresion .)
    FI              reduce using rule 37 (expresion -> expresion = expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 79

    (38) expresion -> expresion LE expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 38 (expresion -> expresion LE expresion .)
    LE              reduce using rule 38 (expresion -> expresion LE expresion .)
    <               reduce using rule 38 (expresion -> expresion LE expresion .)
    ;               reduce using rule 38 (expresion -> expresion LE expresion .)
    ,               reduce using rule 38 (expresion -> expresion LE expresion .)
    IN              reduce using rule 38 (expresion -> expresion LE expresion .)
    OF              reduce using rule 38 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 38 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 38 (expresion -> expresion LE expresion .)
    )               reduce using rule 38 (expresion -> expresion LE expresion .)
    }               reduce using rule 38 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 38 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 38 (expresion -> expresion LE expresion .)
    FI              reduce using rule 38 (expresion -> expresion LE expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 80

    (39) expresion -> expresion < expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 39 (expresion -> expresion < expresion .)
    LE              reduce using rule 39 (expresion -> expresion < expresion .)
    <               reduce using rule 39 (expresion -> expresion < expresion .)
    ;               reduce using rule 39 (expresion -> expresion < expresion .)
    ,               reduce using rule 39 (expresion -> expresion < expresion .)
    IN              reduce using rule 39 (expresion -> expresion < expresion .)
    OF              reduce using rule 39 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 39 (expresion -> expresion < expresion .)
    THEN            reduce using rule 39 (expresion -> expresion < expresion .)
    )               reduce using rule 39 (expresion -> expresion < expresion .)
    }               reduce using rule 39 (expresion -> expresion < expresion .)
    POOL            reduce using rule 39 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 39 (expresion -> expresion < expresion .)
    FI              reduce using rule 39 (expresion -> expresion < expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 81

    (40) expresion -> expresion / expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 40 (expresion -> expresion / expresion .)
    LE              reduce using rule 40 (expresion -> expresion / expresion .)
    <               reduce using rule 40 (expresion -> expresion / expresion .)
    /               reduce using rule 40 (expresion -> expresion / expresion .)
    *               reduce using rule 40 (expresion -> expresion / expresion .)
    -               reduce using rule 40 (expresion -> expresion / expresion .)
    +               reduce using rule 40 (expresion -> expresion / expresion .)
    ;               reduce using rule 40 (expresion -> expresion / expresion .)
    ,               reduce using rule 40 (expresion -> expresion / expresion .)
    IN              reduce using rule 40 (expresion -> expresion / expresion .)
    OF              reduce using rule 40 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 40 (expresion -> expresion / expresion .)
    THEN            reduce using rule 40 (expresion -> expresion / expresion .)
    )               reduce using rule 40 (expresion -> expresion / expresion .)
    }               reduce using rule 40 (expresion -> expresion / expresion .)
    POOL            reduce using rule 40 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 40 (expresion -> expresion / expresion .)
    FI              reduce using rule 40 (expresion -> expresion / expresion .)
    .               shift and go to state 51
    @               shift and go to state 52


state 82

    (41) expresion -> expresion * expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 41 (expresion -> expresion * expresion .)
    LE              reduce using rule 41 (expresion -> expresion * expresion .)
    <               reduce using rule 41 (expresion -> expresion * expresion .)
    /               reduce using rule 41 (expresion -> expresion * expresion .)
    *               reduce using rule 41 (expresion -> expresion * expresion .)
    -               reduce using rule 41 (expresion -> expresion * expresion .)
    +               reduce using rule 41 (expresion -> expresion * expresion .)
    ;               reduce using rule 41 (expresion -> expresion * expresion .)
    ,               reduce using rule 41 (expresion -> expresion * expresion .)
    IN              reduce using rule 41 (expresion -> expresion * expresion .)
    OF              reduce using rule 41 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 41 (expresion -> expresion * expresion .)
    THEN            reduce using rule 41 (expresion -> expresion * expresion .)
    )               reduce using rule 41 (expresion -> expresion * expresion .)
    }               reduce using rule 41 (expresion -> expresion * expresion .)
    POOL            reduce using rule 41 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 41 (expresion -> expresion * expresion .)
    FI              reduce using rule 41 (expresion -> expresion * expresion .)
    .               shift and go to state 51
    @               shift and go to state 52


state 83

    (42) expresion -> expresion - expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 42 (expresion -> expresion - expresion .)
    LE              reduce using rule 42 (expresion -> expresion - expresion .)
    <               reduce using rule 42 (expresion -> expresion - expresion .)
    -               reduce using rule 42 (expresion -> expresion - expresion .)
    +               reduce using rule 42 (expresion -> expresion - expresion .)
    ;               reduce using rule 42 (expresion -> expresion - expresion .)
    ,               reduce using rule 42 (expresion -> expresion - expresion .)
    IN              reduce using rule 42 (expresion -> expresion - expresion .)
    OF              reduce using rule 42 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 42 (expresion -> expresion - expresion .)
    THEN            reduce using rule 42 (expresion -> expresion - expresion .)
    )               reduce using rule 42 (expresion -> expresion - expresion .)
    }               reduce using rule 42 (expresion -> expresion - expresion .)
    POOL            reduce using rule 42 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 42 (expresion -> expresion - expresion .)
    FI              reduce using rule 42 (expresion -> expresion - expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57


state 84

    (43) expresion -> expresion + expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    =               reduce using rule 43 (expresion -> expresion + expresion .)
    LE              reduce using rule 43 (expresion -> expresion + expresion .)
    <               reduce using rule 43 (expresion -> expresion + expresion .)
    -               reduce using rule 43 (expresion -> expresion + expresion .)
    +               reduce using rule 43 (expresion -> expresion + expresion .)
    ;               reduce using rule 43 (expresion -> expresion + expresion .)
    ,               reduce using rule 43 (expresion -> expresion + expresion .)
    IN              reduce using rule 43 (expresion -> expresion + expresion .)
    OF              reduce using rule 43 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 43 (expresion -> expresion + expresion .)
    THEN            reduce using rule 43 (expresion -> expresion + expresion .)
    )               reduce using rule 43 (expresion -> expresion + expresion .)
    }               reduce using rule 43 (expresion -> expresion + expresion .)
    POOL            reduce using rule 43 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 43 (expresion -> expresion + expresion .)
    FI              reduce using rule 43 (expresion -> expresion + expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    /               shift and go to state 56
    *               shift and go to state 57


state 85

    (27) expresion -> OBJECTID ( ) .
    .               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    @               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    =               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    LE              reduce using rule 27 (expresion -> OBJECTID ( ) .)
    <               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    /               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    *               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    -               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    +               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    ;               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    ,               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    IN              reduce using rule 27 (expresion -> OBJECTID ( ) .)
    OF              reduce using rule 27 (expresion -> OBJECTID ( ) .)
    LOOP            reduce using rule 27 (expresion -> OBJECTID ( ) .)
    THEN            reduce using rule 27 (expresion -> OBJECTID ( ) .)
    )               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    }               reduce using rule 27 (expresion -> OBJECTID ( ) .)
    POOL            reduce using rule 27 (expresion -> OBJECTID ( ) .)
    ELSE            reduce using rule 27 (expresion -> OBJECTID ( ) .)
    FI              reduce using rule 27 (expresion -> OBJECTID ( ) .)


state 86

    (30) expresion -> OBJECTID ( expresiones_metodos . expresion )
    (45) expresiones_metodos -> expresiones_metodos . expresion ,
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 101

state 87

    (44) expresion -> OBJECTID ASSIGN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    ,               reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    IN              reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    OF              reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    LOOP            reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    THEN            reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    )               reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    }               reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    POOL            reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    ELSE            reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    FI              reduce using rule 44 (expresion -> OBJECTID ASSIGN expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 88

    (21) expresion -> { bloque } .
    .               reduce using rule 21 (expresion -> { bloque } .)
    @               reduce using rule 21 (expresion -> { bloque } .)
    =               reduce using rule 21 (expresion -> { bloque } .)
    LE              reduce using rule 21 (expresion -> { bloque } .)
    <               reduce using rule 21 (expresion -> { bloque } .)
    /               reduce using rule 21 (expresion -> { bloque } .)
    *               reduce using rule 21 (expresion -> { bloque } .)
    -               reduce using rule 21 (expresion -> { bloque } .)
    +               reduce using rule 21 (expresion -> { bloque } .)
    ;               reduce using rule 21 (expresion -> { bloque } .)
    ,               reduce using rule 21 (expresion -> { bloque } .)
    IN              reduce using rule 21 (expresion -> { bloque } .)
    OF              reduce using rule 21 (expresion -> { bloque } .)
    LOOP            reduce using rule 21 (expresion -> { bloque } .)
    THEN            reduce using rule 21 (expresion -> { bloque } .)
    )               reduce using rule 21 (expresion -> { bloque } .)
    }               reduce using rule 21 (expresion -> { bloque } .)
    POOL            reduce using rule 21 (expresion -> { bloque } .)
    ELSE            reduce using rule 21 (expresion -> { bloque } .)
    FI              reduce using rule 21 (expresion -> { bloque } .)


state 89

    (52) bloque -> bloque expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 102
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 90

    (51) bloque -> error ; .
    }               reduce using rule 51 (bloque -> error ; .)
    BOOL_CONST      reduce using rule 51 (bloque -> error ; .)
    STR_CONST       reduce using rule 51 (bloque -> error ; .)
    INT_CONST       reduce using rule 51 (bloque -> error ; .)
    OBJECTID        reduce using rule 51 (bloque -> error ; .)
    {               reduce using rule 51 (bloque -> error ; .)
    NEW             reduce using rule 51 (bloque -> error ; .)
    CASE            reduce using rule 51 (bloque -> error ; .)
    LET             reduce using rule 51 (bloque -> error ; .)
    WHILE           reduce using rule 51 (bloque -> error ; .)
    IF              reduce using rule 51 (bloque -> error ; .)
    ~               reduce using rule 51 (bloque -> error ; .)
    ISVOID          reduce using rule 51 (bloque -> error ; .)
    NOT             reduce using rule 51 (bloque -> error ; .)
    (               reduce using rule 51 (bloque -> error ; .)


state 91

    (53) bloque -> expresion ; .
    }               reduce using rule 53 (bloque -> expresion ; .)
    BOOL_CONST      reduce using rule 53 (bloque -> expresion ; .)
    STR_CONST       reduce using rule 53 (bloque -> expresion ; .)
    INT_CONST       reduce using rule 53 (bloque -> expresion ; .)
    OBJECTID        reduce using rule 53 (bloque -> expresion ; .)
    {               reduce using rule 53 (bloque -> expresion ; .)
    NEW             reduce using rule 53 (bloque -> expresion ; .)
    CASE            reduce using rule 53 (bloque -> expresion ; .)
    LET             reduce using rule 53 (bloque -> expresion ; .)
    WHILE           reduce using rule 53 (bloque -> expresion ; .)
    IF              reduce using rule 53 (bloque -> expresion ; .)
    ~               reduce using rule 53 (bloque -> expresion ; .)
    ISVOID          reduce using rule 53 (bloque -> expresion ; .)
    NOT             reduce using rule 53 (bloque -> expresion ; .)
    (               reduce using rule 53 (bloque -> expresion ; .)


state 92

    (23) expresion -> CASE expresion OF . case_lista ESAC
    (49) case_lista -> . OBJECTID : TYPEID DARROW expresion ; case_lista
    (50) case_lista -> . OBJECTID : TYPEID DARROW expresion ;
    OBJECTID        shift and go to state 104

    case_lista                     shift and go to state 103

state 93

    (24) expresion -> LET OBJECTID : . TYPEID inicializacion expresiones_let IN expresion
    TYPEID          shift and go to state 105


state 94

    (25) expresion -> WHILE expresion LOOP . expresion POOL
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 106

state 95

    (26) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 107

state 96

    (36) expresion -> ( expresion ) .
    .               reduce using rule 36 (expresion -> ( expresion ) .)
    @               reduce using rule 36 (expresion -> ( expresion ) .)
    =               reduce using rule 36 (expresion -> ( expresion ) .)
    LE              reduce using rule 36 (expresion -> ( expresion ) .)
    <               reduce using rule 36 (expresion -> ( expresion ) .)
    /               reduce using rule 36 (expresion -> ( expresion ) .)
    *               reduce using rule 36 (expresion -> ( expresion ) .)
    -               reduce using rule 36 (expresion -> ( expresion ) .)
    +               reduce using rule 36 (expresion -> ( expresion ) .)
    ;               reduce using rule 36 (expresion -> ( expresion ) .)
    ,               reduce using rule 36 (expresion -> ( expresion ) .)
    IN              reduce using rule 36 (expresion -> ( expresion ) .)
    OF              reduce using rule 36 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 36 (expresion -> ( expresion ) .)
    THEN            reduce using rule 36 (expresion -> ( expresion ) .)
    )               reduce using rule 36 (expresion -> ( expresion ) .)
    }               reduce using rule 36 (expresion -> ( expresion ) .)
    POOL            reduce using rule 36 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 36 (expresion -> ( expresion ) .)
    FI              reduce using rule 36 (expresion -> ( expresion ) .)


state 97

    (12) metodo -> OBJECTID ( formales formal ) : TYPEID { . expresion } ;
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 108

state 98

    (13) metodo -> OBJECTID ( ) : TYPEID { expresion } . ;
    ;               shift and go to state 109


state 99

    (28) expresion -> expresion . OBJECTID ( . )
    (29) expresion -> expresion . OBJECTID ( . expresiones_metodos expresion )
    (45) expresiones_metodos -> . expresiones_metodos expresion ,
    (46) expresiones_metodos -> .
    )               shift and go to state 110
    BOOL_CONST      reduce using rule 46 (expresiones_metodos -> .)
    STR_CONST       reduce using rule 46 (expresiones_metodos -> .)
    INT_CONST       reduce using rule 46 (expresiones_metodos -> .)
    OBJECTID        reduce using rule 46 (expresiones_metodos -> .)
    {               reduce using rule 46 (expresiones_metodos -> .)
    NEW             reduce using rule 46 (expresiones_metodos -> .)
    CASE            reduce using rule 46 (expresiones_metodos -> .)
    LET             reduce using rule 46 (expresiones_metodos -> .)
    WHILE           reduce using rule 46 (expresiones_metodos -> .)
    IF              reduce using rule 46 (expresiones_metodos -> .)
    ~               reduce using rule 46 (expresiones_metodos -> .)
    ISVOID          reduce using rule 46 (expresiones_metodos -> .)
    NOT             reduce using rule 46 (expresiones_metodos -> .)
    (               reduce using rule 46 (expresiones_metodos -> .)

    expresiones_metodos            shift and go to state 111

state 100

    (31) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 112


state 101

    (30) expresion -> OBJECTID ( expresiones_metodos expresion . )
    (45) expresiones_metodos -> expresiones_metodos expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 113
    ,               shift and go to state 114
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 102

    (52) bloque -> bloque expresion ; .
    }               reduce using rule 52 (bloque -> bloque expresion ; .)
    BOOL_CONST      reduce using rule 52 (bloque -> bloque expresion ; .)
    STR_CONST       reduce using rule 52 (bloque -> bloque expresion ; .)
    INT_CONST       reduce using rule 52 (bloque -> bloque expresion ; .)
    OBJECTID        reduce using rule 52 (bloque -> bloque expresion ; .)
    {               reduce using rule 52 (bloque -> bloque expresion ; .)
    NEW             reduce using rule 52 (bloque -> bloque expresion ; .)
    CASE            reduce using rule 52 (bloque -> bloque expresion ; .)
    LET             reduce using rule 52 (bloque -> bloque expresion ; .)
    WHILE           reduce using rule 52 (bloque -> bloque expresion ; .)
    IF              reduce using rule 52 (bloque -> bloque expresion ; .)
    ~               reduce using rule 52 (bloque -> bloque expresion ; .)
    ISVOID          reduce using rule 52 (bloque -> bloque expresion ; .)
    NOT             reduce using rule 52 (bloque -> bloque expresion ; .)
    (               reduce using rule 52 (bloque -> bloque expresion ; .)


state 103

    (23) expresion -> CASE expresion OF case_lista . ESAC
    ESAC            shift and go to state 115


state 104

    (49) case_lista -> OBJECTID . : TYPEID DARROW expresion ; case_lista
    (50) case_lista -> OBJECTID . : TYPEID DARROW expresion ;
    :               shift and go to state 116


state 105

    (24) expresion -> LET OBJECTID : TYPEID . inicializacion expresiones_let IN expresion
    (10) inicializacion -> . ASSIGN expresion
    (11) inicializacion -> .
    ASSIGN          shift and go to state 27
    ,               reduce using rule 11 (inicializacion -> .)
    IN              reduce using rule 11 (inicializacion -> .)

    inicializacion                 shift and go to state 117

state 106

    (25) expresion -> WHILE expresion LOOP expresion . POOL
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    POOL            shift and go to state 118
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 107

    (26) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ELSE            shift and go to state 119
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 108

    (12) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion . } ;
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    }               shift and go to state 120
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 109

    (13) metodo -> OBJECTID ( ) : TYPEID { expresion } ; .
    OBJECTID        reduce using rule 13 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)
    }               reduce using rule 13 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)


state 110

    (28) expresion -> expresion . OBJECTID ( ) .
    .               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    @               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    =               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    LE              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    <               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    /               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    *               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    -               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    +               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ;               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ,               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    IN              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    OF              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    THEN            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    )               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    }               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    POOL            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    FI              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)


state 111

    (29) expresion -> expresion . OBJECTID ( expresiones_metodos . expresion )
    (45) expresiones_metodos -> expresiones_metodos . expresion ,
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 121

state 112

    (31) expresion -> expresion @ TYPEID . OBJECTID . ( expresiones_metodos expresion )
    (32) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 122


state 113

    (30) expresion -> OBJECTID ( expresiones_metodos expresion ) .
    .               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    @               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    =               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    LE              reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    <               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    /               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    *               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    -               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    +               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    ;               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    ,               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    IN              reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    OF              reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    LOOP            reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    THEN            reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    )               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    }               reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    POOL            reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    ELSE            reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)
    FI              reduce using rule 30 (expresion -> OBJECTID ( expresiones_metodos expresion ) .)


state 114

    (45) expresiones_metodos -> expresiones_metodos expresion , .
    BOOL_CONST      reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    STR_CONST       reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    INT_CONST       reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    OBJECTID        reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    {               reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    NEW             reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    CASE            reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    LET             reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    WHILE           reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    IF              reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    ~               reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    ISVOID          reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    NOT             reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)
    (               reduce using rule 45 (expresiones_metodos -> expresiones_metodos expresion , .)


state 115

    (23) expresion -> CASE expresion OF case_lista ESAC .
    .               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    @               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    =               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    LE              reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    <               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    /               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    *               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    -               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    +               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    ;               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    ,               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    IN              reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    OF              reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    LOOP            reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    THEN            reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    )               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    }               reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    POOL            reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    ELSE            reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)
    FI              reduce using rule 23 (expresion -> CASE expresion OF case_lista ESAC .)


state 116

    (49) case_lista -> OBJECTID : . TYPEID DARROW expresion ; case_lista
    (50) case_lista -> OBJECTID : . TYPEID DARROW expresion ;
    TYPEID          shift and go to state 123


state 117

    (24) expresion -> LET OBJECTID : TYPEID inicializacion . expresiones_let IN expresion
    (47) expresiones_let -> . , OBJECTID : TYPEID inicializacion expresiones_let
    (48) expresiones_let -> .
    ,               shift and go to state 125
    IN              reduce using rule 48 (expresiones_let -> .)

    expresiones_let                shift and go to state 124

state 118

    (25) expresion -> WHILE expresion LOOP expresion POOL .
    .               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    =               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    ;               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    }               reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 25 (expresion -> WHILE expresion LOOP expresion POOL .)


state 119

    (26) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 126

state 120

    (12) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } . ;
    ;               shift and go to state 127


state 121

    (29) expresion -> expresion . OBJECTID ( expresiones_metodos expresion . )
    (45) expresiones_metodos -> expresiones_metodos expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 128
    ,               shift and go to state 114
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 122

    (31) expresion -> expresion @ TYPEID . OBJECTID ( . expresiones_metodos expresion )
    (32) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (45) expresiones_metodos -> . expresiones_metodos expresion ,
    (46) expresiones_metodos -> .
    )               shift and go to state 130
    BOOL_CONST      reduce using rule 46 (expresiones_metodos -> .)
    STR_CONST       reduce using rule 46 (expresiones_metodos -> .)
    INT_CONST       reduce using rule 46 (expresiones_metodos -> .)
    OBJECTID        reduce using rule 46 (expresiones_metodos -> .)
    {               reduce using rule 46 (expresiones_metodos -> .)
    NEW             reduce using rule 46 (expresiones_metodos -> .)
    CASE            reduce using rule 46 (expresiones_metodos -> .)
    LET             reduce using rule 46 (expresiones_metodos -> .)
    WHILE           reduce using rule 46 (expresiones_metodos -> .)
    IF              reduce using rule 46 (expresiones_metodos -> .)
    ~               reduce using rule 46 (expresiones_metodos -> .)
    ISVOID          reduce using rule 46 (expresiones_metodos -> .)
    NOT             reduce using rule 46 (expresiones_metodos -> .)
    (               reduce using rule 46 (expresiones_metodos -> .)

    expresiones_metodos            shift and go to state 129

state 123

    (49) case_lista -> OBJECTID : TYPEID . DARROW expresion ; case_lista
    (50) case_lista -> OBJECTID : TYPEID . DARROW expresion ;
    DARROW          shift and go to state 131


state 124

    (24) expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let . IN expresion
    IN              shift and go to state 132


state 125

    (47) expresiones_let -> , . OBJECTID : TYPEID inicializacion expresiones_let
    OBJECTID        shift and go to state 133


state 126

    (26) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    FI              shift and go to state 134
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 127

    (12) metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .
    OBJECTID        reduce using rule 12 (metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .)
    }               reduce using rule 12 (metodo -> OBJECTID ( formales formal ) : TYPEID { expresion } ; .)


state 128

    (29) expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .
    .               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    @               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    =               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    LE              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    <               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    /               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    *               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    -               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    +               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    ;               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    ,               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    IN              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    OF              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    LOOP            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    THEN            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    )               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    }               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    POOL            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    ELSE            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)
    FI              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones_metodos expresion ) .)


state 129

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos . expresion )
    (45) expresiones_metodos -> expresiones_metodos . expresion ,
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 135

state 130

    (32) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 131

    (49) case_lista -> OBJECTID : TYPEID DARROW . expresion ; case_lista
    (50) case_lista -> OBJECTID : TYPEID DARROW . expresion ;
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 136

state 132

    (24) expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN . expresion
    (17) expresion -> . BOOL_CONST
    (18) expresion -> . STR_CONST
    (19) expresion -> . INT_CONST
    (20) expresion -> . OBJECTID
    (21) expresion -> . { bloque }
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . CASE expresion OF case_lista ESAC
    (24) expresion -> . LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion
    (25) expresion -> . WHILE expresion LOOP expresion POOL
    (26) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (27) expresion -> . OBJECTID ( )
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . expresion . OBJECTID ( expresiones_metodos expresion )
    (30) expresion -> . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . ~ expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . NOT expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion = expresion
    (38) expresion -> . expresion LE expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    (44) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 34
    STR_CONST       shift and go to state 35
    INT_CONST       shift and go to state 36
    OBJECTID        shift and go to state 37
    {               shift and go to state 38
    NEW             shift and go to state 39
    CASE            shift and go to state 40
    LET             shift and go to state 41
    WHILE           shift and go to state 42
    IF              shift and go to state 43
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 44

    expresion                      shift and go to state 137

state 133

    (47) expresiones_let -> , OBJECTID . : TYPEID inicializacion expresiones_let
    :               shift and go to state 138


state 134

    (26) expresion -> IF expresion THEN expresion ELSE expresion FI .
    .               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    =               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ;               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    }               reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 26 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 135

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion . )
    (45) expresiones_metodos -> expresiones_metodos expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 139
    ,               shift and go to state 114
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 136

    (49) case_lista -> OBJECTID : TYPEID DARROW expresion . ; case_lista
    (50) case_lista -> OBJECTID : TYPEID DARROW expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 140
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 137

    (24) expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (29) expresion -> expresion . . OBJECTID ( expresiones_metodos expresion )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones_metodos expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . = expresion
    (38) expresion -> expresion . LE expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    ,               reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    IN              reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    OF              reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    LOOP            reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    THEN            reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    )               reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    }               reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    POOL            reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    ELSE            reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    FI              reduce using rule 24 (expresion -> LET OBJECTID : TYPEID inicializacion expresiones_let IN expresion .)
    .               shift and go to state 51
    @               shift and go to state 52
    =               shift and go to state 53
    LE              shift and go to state 54
    <               shift and go to state 55
    /               shift and go to state 56
    *               shift and go to state 57
    -               shift and go to state 58
    +               shift and go to state 59


state 138

    (47) expresiones_let -> , OBJECTID : . TYPEID inicializacion expresiones_let
    TYPEID          shift and go to state 141


state 139

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .
    .               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    @               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    =               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    LE              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    <               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    /               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    *               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    -               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    +               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    ;               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    ,               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    IN              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    OF              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    LOOP            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    THEN            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    )               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    }               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    POOL            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    ELSE            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)
    FI              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones_metodos expresion ) .)


state 140

    (49) case_lista -> OBJECTID : TYPEID DARROW expresion ; . case_lista
    (50) case_lista -> OBJECTID : TYPEID DARROW expresion ; .
    (49) case_lista -> . OBJECTID : TYPEID DARROW expresion ; case_lista
    (50) case_lista -> . OBJECTID : TYPEID DARROW expresion ;
    ESAC            reduce using rule 50 (case_lista -> OBJECTID : TYPEID DARROW expresion ; .)
    OBJECTID        shift and go to state 104

    case_lista                     shift and go to state 142

state 141

    (47) expresiones_let -> , OBJECTID : TYPEID . inicializacion expresiones_let
    (10) inicializacion -> . ASSIGN expresion
    (11) inicializacion -> .
    ASSIGN          shift and go to state 27
    ,               reduce using rule 11 (inicializacion -> .)
    IN              reduce using rule 11 (inicializacion -> .)

    inicializacion                 shift and go to state 143

state 142

    (49) case_lista -> OBJECTID : TYPEID DARROW expresion ; case_lista .
    ESAC            reduce using rule 49 (case_lista -> OBJECTID : TYPEID DARROW expresion ; case_lista .)


state 143

    (47) expresiones_let -> , OBJECTID : TYPEID inicializacion . expresiones_let
    (47) expresiones_let -> . , OBJECTID : TYPEID inicializacion expresiones_let
    (48) expresiones_let -> .
    ,               shift and go to state 125
    IN              reduce using rule 48 (expresiones_let -> .)

    expresiones_let                shift and go to state 144

state 144

    (47) expresiones_let -> , OBJECTID : TYPEID inicializacion expresiones_let .
    IN              reduce using rule 47 (expresiones_let -> , OBJECTID : TYPEID inicializacion expresiones_let .)
